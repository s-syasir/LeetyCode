

# TODO: Call on the solution class and methods and test varied inputs to see if the solution works.
# TODO: change the solution call to match the name of the new method.

# Main. This is where you test the solution class that was generated by calling on it.
def main():
    print("Hello World!")
    solution_obj = Solution
    # input = "A man, a plan, a canal: Panama"
    input = "0P"
    output = solution_obj.isPalindrome(input)
    print(output)


# TODO: change the name of the defined method "something" to the problem name
# TODO: Write out the solution for the problem, writing out the class and method
# TODO: ensure the return value and parameters match the problem

# Solution class. Copy over the information from Leetcode.
class Solution:
    def isPalindrome(input):
        validChars = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o', 'p', 'q', 'r', 's', 't','u','v','w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
        input = input.lower()
        print(input)
        palCheck = ""

        for char in input:
            if validChars.__contains__(char):
                palCheck += char

        if len(palCheck) == 1:
            return False

        halfLength = (int) (len(palCheck) / 2)
        j = len(palCheck) - 1
        for i in range (0, halfLength):
            if (palCheck[i] != palCheck[j]):
                return False
            j-= 1
        return True


# If this is the file that is running "__name__ == __main__",
# run the main() function
if __name__ == "__main__":
    main()
